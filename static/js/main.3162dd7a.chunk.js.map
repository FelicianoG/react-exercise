{"version":3,"sources":["api.ts","components/Timer.tsx","components/useDateCountdown.js","components/EventCard.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["currentUser","id","name","users","age","events","date","location","attendees","Timer","countdown","countDownDate","Date","getTime","useState","loading","active","days","hours","minutes","seconds","dateObj","setDateObj","startInterval","useCallback","setInterval","now","distance","Math","floor","prev","clearInterval","useEffect","useDateCountdown","eventDate","activeCountdown","parseInt","EventCard","event","user","attendeesArr","setAttendeesArr","showAttendees","setShowAttendees","Box","sx","minWidth","margin","Card","variant","CardContent","Typography","onClick","component","mb","color","style","cursor","padding","map","i","listStyleType","fontSize","filter","a","uuid","Button","includes","splice","indexOf","handleUserRSVP","sort","b","localeCompare","App","filteredEvents","setFilteredEvents","className","TextField","onChange","e","element","toLocaleLowerCase","target","value","filterEvents","input","label","focused","evt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3162dd7a.chunk.js","sourcesContent":["import { Event, User } from \"./types\";\n\nexport const currentUser: User = { id: 5, name: \"Feliciano\" };\n\nexport const users: User[] = [\n  {\n    id: 1,\n    name: \"Karpov\",\n    age: null,\n  },\n  {\n    id: 2,\n    name: \"Kasparov\",\n    age: 27,\n  },\n  {\n    id: 3,\n    name: \"Carlsen\",\n  },\n  {\n    id: 4,\n    name: \"Capablanca\",\n  },\n  currentUser,\n];\n\nexport const events: Event[] = [\n  {\n    id: 1,\n    date: \"2024-06-28T18:10:30.113Z\",\n    name: \"My first React interview\",\n    location: \"Mexico City\",\n    attendees: [2, 3, 5],\n  },\n  {\n    id: 2,\n    date: \"2022-09-10T18:15:00.113Z\",\n    name: \"Mid level React interview\",\n    location: \"Guadalajara\",\n    attendees: [2, 3],\n  },\n  {\n    id: 3,\n    date: \"2022-11-15T18:17:00.113Z\",\n    name: \"A Senior React event\",\n    location: \"California\",\n  },\n  {\n    id: 4,\n    date: \"2022-12-24T09:17:00.113Z\",\n    name: \"Node JS conference\",\n    location: \"Guadalajara\",\n    attendees: [2, 3],\n  },\n];\n","import React from \"react\";\nimport { useDateCountdown } from \"./useDateCountdown\";\n\ntype TimerProps = {\n  eventDate: string;\n};\n\nexport default function Timer({ eventDate }: TimerProps) {\n  const countdown = useDateCountdown(eventDate);\n  const activeCountdown = `Only ${countdown.days} \n  day${parseInt(countdown.days) !== 1 ? \"s\" : \"\"} ${countdown.hours} \n  hour${parseInt(countdown.hours) !== 1 ? \"s\" : \"\"} ${countdown.minutes} \n  minute${parseInt(countdown.minutes) !== 1 ? \"s\" : \"\"} ${countdown.seconds} second${parseInt(countdown.seconds) !== 1 ? \"s\" : \"\"} left`;\n\n  return countdown.loading ? null : <div> {countdown.active ? activeCountdown : \"You can no longer register for this event\"}</div>;\n}\n","import { useState, useEffect, useCallback } from \"react\";\n\nexport function useDateCountdown(date) {\n  const countDownDate = new Date(date).getTime();\n  const [dateObj, setDateObj] = useState({ loading: true, active: true, days: \"00\", hours: \"00\", minutes: \"00\", seconds: \"00\" });\n\n  const startInterval = useCallback(\n    () =>\n      setInterval(function () {\n        const now = new Date().getTime();\n        const distance = countDownDate - now;\n        const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n        const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n        setDateObj((prev) => {\n          return {\n            ...prev,\n            loading: false,\n            days,\n            hours,\n            minutes,\n            seconds,\n          };\n        });\n\n        if (distance < 0) {\n          clearInterval(startInterval);\n          setDateObj((prev) => {\n            return { ...prev, loading: false, active: false };\n          });\n        }\n      }, 1000),\n    [countDownDate]\n  );\n\n  useEffect(() => {\n    startInterval();\n    return clearInterval(startInterval);\n  }, [startInterval]);\n  return dateObj;\n}\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { Event, User } from \"../types\";\nimport { users } from \"../api\";\nimport { useState } from \"react\";\nimport Timer from \"./Timer\";\nimport { v4 as uuid } from \"uuid\";\n\ninterface EventCardProps {\n  event: Event;\n  user: User;\n}\n\nexport default function EventCard({ event, user }: EventCardProps) {\n  const [attendeesArr, setAttendeesArr] = useState(event.attendees);\n  const [showAttendees, setShowAttendees] = useState(true);\n\n  function handleUserRSVP(user: User) {\n    if (typeof attendeesArr === \"object\") {\n      setAttendeesArr((prev) => {\n        if (prev?.includes(user.id)) {\n          prev.splice(attendeesArr.indexOf(user.id), 1);\n          return [...prev];\n        }\n        if (prev?.includes(user.id) === false) {\n          return [...prev, user.id];\n        }\n      });\n    } else {\n      setAttendeesArr([user.id]);\n    }\n  }\n  return (\n    <Box sx={{ minWidth: 275, margin: \"20px\" }}>\n      <Card variant=\"outlined\">\n        <React.Fragment>\n          <CardContent sx={{ margin: \"10px 60px\" }}>\n            <Typography\n              onClick={() => {\n                setShowAttendees((prev) => !prev);\n              }}\n              variant=\"h5\"\n              component=\"div\"\n            >\n              {event.name}\n            </Typography>\n            <Typography\n              onClick={() => {\n                setShowAttendees((prev) => !prev);\n              }}\n              sx={{ mb: 1.5 }}\n              color=\"text.secondary\"\n            >\n              {event.location}\n            </Typography>\n            <Typography\n              onClick={() => {\n                setShowAttendees((prev) => !prev);\n              }}\n              variant=\"body2\"\n            >\n              {event.date}\n              <br />\n              <u style={{ cursor: \"pointer\" }}>Attendees:</u>\n\n              <br />\n            </Typography>\n            {showAttendees ? (\n              <ul style={{ margin: \"10px\", padding: 0 }}>\n                {attendeesArr?.map((id, i) => {\n                  return (\n                    <li key={uuid()} style={{ listStyleType: \"none\", margin: 0, padding: 0, fontSize: \".8em\" }}>\n                      {users.filter((a) => a.id === id)[0].name}\n                    </li>\n                  );\n                })}\n              </ul>\n            ) : null}\n            <Button\n              onClick={() => {\n                handleUserRSVP(user);\n              }}\n              sx={{ margin: \"10px\" }}\n              variant=\"contained\"\n            >\n              RSVP\n            </Button>\n            <Typography variant=\"body2\">\n              <Timer eventDate={event.date} />\n            </Typography>\n          </CardContent>\n        </React.Fragment>\n      </Card>\n    </Box>\n  );\n}\n","import \"./App.css\";\nimport EventCard from \"./components/EventCard\";\nimport { events, currentUser } from \"./api\";\nimport TextField from \"@mui/material/TextField\";\nimport { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nevents.sort((a, b) => a.name.localeCompare(b.name));\n\nfunction App() {\n  const [filteredEvents, setFilteredEvents] = useState(events);\n  function filterEvents(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>): void {\n    setFilteredEvents(() => events.filter((element) => element.name.toLocaleLowerCase().includes(e.target.value.toLocaleLowerCase())));\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <TextField\n          onChange={(e) => filterEvents(e)}\n          sx={{ margin: \"20px\", input: { color: \"white\" } }}\n          label=\"Filter events\"\n          color=\"primary\"\n          focused\n        />\n\n        {filteredEvents.map((evt, i) => {\n          return <EventCard key={uuid()} user={currentUser} event={evt}></EventCard>;\n        })}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}